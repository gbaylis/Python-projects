# a pong game, by gbaylis
# created on Jan 26th 2020

import turtle
# turtle is a function in Python that acts as a canvas
# for drawing the graphics of the game
import os

wn = turtle.Screen()
wn.title("Pong")
# I choose green, to make it look more like a tennis court
wn.bgcolor("black")
wn.setup(width=800, height=600)
wn.tracer(0)

#Scoring system
# player 1 & 2 starts with 0 points
score_a = 0
score_b = 0

# Paddle A or player 1
paddle_a = turtle.Turtle()
paddle_a.speed(0)
paddle_a.shape("square")
paddle_a.color("white")
# stretch the paddle shape, into a long rectangle
paddle_a.shapesize(stretch_wid=5, stretch_len=1)
paddle_a.penup()
paddle_a.goto(-350, 0)

# Paddle B, or player 2
paddle_b = turtle.Turtle()
paddle_b.speed(0)
paddle_b.shape("square")
paddle_b.color("white")
#stretch the width of the paddle to make it longer, you could have one paddle be longer then the other
paddle_b.shapesize(stretch_wid=5, stretch_len=1)
paddle_b.penup()
paddle_b.goto(350, 0)

# the ball
ball = turtle.Turtle()
ball.speed(0)
ball.shape("square")
ball.color("white")
ball.penup()
ball.goto(0,0)
# this measure how fast the ball moves to the left and right
ball.dx = 2
# this measures how fast the ball moves up and down the screen
ball.dy = 2

# Pen
pen = turtle.Turtle()
pen.speed(0)
# information that will appear at the top of the screen
pen.shape("square")
pen.color("white")
pen.penup()
pen.hideturtle()
pen.goto(0, 260)
pen.write("Player 1: <--> Player 2: 0", alighn="center", font=("Bauhaus", 24, "normal"))

# Functions
# create the function to move player 1's paddle up the screen
def paddle_a_up():
    y = paddle_a.ycor()
    y += 20
    paddle_a.sety(y)
    
# create the function to move player 1's paddle down the screen    
def paddle_a_down():
    y = paddle_a.ycor()
    y -= 20
    paddle_a.sety(y)
    
# create a function to move player 2's paddle up the screen
def paddle_b_up():
    y = paddle_b.ycor()
    y += 20
    paddle_b.sety(y)
    
def paddle_b_down():
    y = paddle_b.ycor()
    y -= 20
    paddle_b.sety(y)    

# mapping the keyboard buttons, to moving the paddles
wn.listen()
# to move player 1 paddle up the screen, press w
wn.onkeypress(paddle_a_up, "w")
# to move player 1 paddle down the screen, press s
wn.onkeypress(paddle_a_down, "s")
# to move player 2 paddle up the screen, press the up arrow key
wn.onkeypress(paddle_b_up, "Up")
# to move player 2 paddle down the screen, press the down arrow key
wn.onkeypress(paddle_b_down, "Down")

# main game loop
while True:
    wn.update()
    
    # to move the ball across the screen
    ball.setx(ball.xcor() + ball.dx)
    ball.sety(ball.ycor() + ball.dy)
    
    # the ball will bounce off of the bottom of the screen
    if ball.ycor() > 290: # 290 on the y axis is the top of the screen
        ball.sety(290)
        ball.dy *= -1
        # if you were using a sound file, here is the code you would use
        # os.system("afplay bounce.wav&")
        
    elif ball.ycor() -290: # -290 on the y axis is the bottom of the screen
        ball.sety(-290)
        ball.sety(-290)
        ball.dy *= -1
        os.system("afplay bounce.wav&")

    # Left and right
    if ball.xcor() > 350:
        score_a += 1
        pen.clear()
        pen.write("Player A: {}  Player B: {}".format(score_a, score_b), align="center", font=("Bauhaus", 24, "normal"))
        ball.goto(0, 0)
        ball.dx *= -1

    elif ball.xcor() < -350:
        score_b += 1
        pen.clear()
        pen.write("Player A: {}  Player B: {}".format(score_a, score_b), align="center", font=("Bauhaus", 24, "normal"))
        ball.goto(0, 0)
        ball.dx *= -1

    # Paddle and ball collisions
    if ball.xcor() < -340 and ball.ycor() < paddle_a.ycor() + 50 and ball.ycor() > paddle_a.ycor() - 50:
        ball.dx *= -1 
        # os.system("afplay bounce.wav&")
    
    elif ball.xcor() > 340 and ball.ycor() < paddle_b.ycor() + 50 and ball.ycor() > paddle_b.ycor() - 50:
        ball.dx *= -1
        
        # if you want to play the bounce sound when the ball hits a paddle
        #os.system("afplay bounce.wav&"
